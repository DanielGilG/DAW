/*  ¡Boom!  */

-- Ejercicio 1
CREATE OR REPLACE TRIGGER trg_salario_minimo
BEFORE INSERT ON HR.EMPLOYEES
BEGIN
	IF :NEW.salary < 1000 THEN
		RAISE_APPLICATION_ERROR(-200001,"Rácano");
	END IF;
END;
/

-- Ejercicio 2
CREATE OR REPLACE TRIGGER trg_salario_minimo
BEFORE DELETE ON HR.EMPLOYEES
FOR EACH ROW
BEGIN
	IF :OLD.DEPARTMENT_ID = 90 THEN
		RAISE_APPLICATION_ERROR(-200001,"Rácano");
	END IF;
END;
/

-- Ejercicio 3 (con trigger de auditoría CON FECHA INCLUIDA !!)
CREATE OR REPLACE TRIGGER trg_salario_empleado
AFTER DELETE ON HR.EMPLOYEES
FOR EACH ROW
BEGIN

    INSERT INTO empleados_borrados(employee_id, salario_anterior, salario_nuevo, SYSDATE)

END;
/

-- Ejercicio 4
CREATE OR REPLACE TRIGGER t_salario
AFTER UPDATE OF SALARY ON HR.EMPLOYEES
FOR EACH ROW
BEGIN
	INSERT .... :OLD.employee_id
END;

-- Ejercicio 5
CREATE OR REPLACE TRIGGER t_cambio
AFTER UPDATE OF SALARY ON HR.EMPLOYEES
FOR EACH ROW
BEGIN
	UPDATE .... :OLD.salary
END;

-- Ejercicio 6
CREATE OR REPLACE TRIGGER t_no
BEFORE UPDATE OF MANAGER_ID ON HR.EMPLOYEES
FOR EACH ROW
BEGIN
	IF :OLD.EMPLOYEE > 105
		RAISE_APPLICATION_ERROR(-20005, "Nooooourrr");
	END IF;
END;
/

-- Ejercicio 7
CREATE OR REPLACE TRIGGER t_sameName
BEFORE INSERT
FOR EACH ROW
v_contador = NUMBER;
BEGIN
	SELECT COUNT(*) INTO v_contador
	FROM HR.EMPLOYEES E 
	WHERE E.FIRST_NAME=:NEW.FIRST_NAME AND E.LAST_NAME=:NEW LAST_NAME
	-- Si la cuenta del nombre es > 0 = salta
	IF v_contador > 0 THEN

	END IF;
END;
/

-- Ejercicio 8
...
v_dep= NUMBER;
BEGIN
	SELECT D.DEPARTMENT_ID INTO v_dep
	FROM HR.DEPARTMENT ID D
	WHERE D.DEAPRTMENT_ID=:NEW.DEPARTMENT_ID;

	IF v_dep IS NULL THEN
		INSERT INTO HR.DEPARTMENT VALUES(:NEW_DEPARTMENT_ID, "Automatico");
	END IF;
